version: '3'
services:

  # Go Server
  server:
    build:
      context: ./server/backend_go
      dockerfile: Dockerfile
    container_name: vgs-server
    ports:
      - 12345:12345
    tty: true # コンテナの起動永続化
    volumes:
      - ./server/backend_go:/go/src/github.com/akitomonam/paper-management-app/server
      - .git:/go/src/github.com/akitomonam/paper-management-app/.git
    depends_on:
      - 'db'
  # grobid server
  grobidserver:
    build:
      context: ./server/backend_grobid
      dockerfile: Dockerfile
    container_name: vgs-backend-grobid
    ports:
      - 8070:8070
    working_dir: '/opt/grobid'
    tty: true # コンテナの起動永続化
    volumes:
      - ./server/backend_grobid:/root
      - .git:/root/.git
    runtime: nvidia
  # backend python
  backendpython:
    build:
      context: ./server/backend_python
      dockerfile: Dockerfile
    container_name: vgs-backend-python
    ports:
      - 12340:12340
    working_dir: '/root/'
    tty: true # コンテナの起動永続化
    volumes:
      - ./server/backend_python:/root
      - .git:/root/.git
    # command: sh -c "cd /root/ && rm -rf /root/grobid_client* && git clone https://github.com/akitomonam/grobid_client_python.git && cd /root/grobid_client_python && python setup.py install"
    # とりあえずコンテナが停止しないように「tail -f /dev/null」
    entrypoint: ["sh", "-c", "cd /root/ && rm -rf /root/grobid_client* && git clone https://github.com/akitomonam/grobid_client_python.git && cd /root/grobid_client_python && python setup.py install && tail -f /dev/null"]
    # stdin_open: true
  # client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: vgs-client
    ports:
      - 8080:8080
    tty: true # コンテナの起動永続化
    volumes:
      - ./client:/usr/src/app/client
      - .git:/usr/src/app/.git
    command: sh -c "cd /usr/src/app/client/Vue3 && npm install && npm run build && npm run serve"
  # DB
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: vgs-db
    ports:
      - 3306:3306
    environment:
      # - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      # - MYSQL_PASSWORD=${DB_PASS}
      # - MYSQL_USER=${DB_USER}
      # - TZ=${TZ}
    volumes:
      - ./db/mysql-store:/var/lib/mysql  # データ永続化
      - ./db/mysql-logs:/var/log/mysql
